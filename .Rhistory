group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
all_phrase
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5)
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5)
best_phrase
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
best_phrase
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase, ncol=2)
best_phrase
best_phrase
png(filename = "all_phrases.png")
all_phrase
dev.off()
png(filename = "best_phrases.png")
best_phrase
dev.off()
(filename = "all_phrases.png")
all_phrase
dev.off()
png(filename = "best_phrases.png")
best_phrase
dev.off()
png(filename = "all_phrases.png")
all_phrase
dev.off()
all_phrase <- normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "all_phrases.png")
all_phrase
dev.off()
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase, ncol=2) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "best_phrases.png")
best_phrase
dev.off()
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec))
View(norm_factor)
normalized <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
mutate(new_time = Time_sec - norm_factor$start_time[phrase,vocalization])
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec))
normalized <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
mutate(new_time = Time_sec - norm_factor$start_time[phrase,vocalization])
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
normalized <- as_tibble(normalized)
View(normalized)
just_silent <- peak_ch1 %>% filter(vocalization == "silent") %>% mutate(new_time = Time_sec)
just_silent <- as_tibble(just_silent)
View(just_silent)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
summarize(phrase_mean = mean(as.numeric(Ch1_amp),na.rm=TRUE)) %>%
mutate(phrase_diff = phrase_mean - lag(phrase_mean)) %>%
peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarise(num_peaks = n())
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
normalized <- as_tibble(normalized)
View(normalized)
just_silent <- peak_ch1 %>% filter(vocalization == "silent") %>% mutate(new_time = Time_sec)
just_silent <- as_tibble(just_silent)
View(just_silent)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarise(num_peaks = n())
all_phrase <- normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "all_phrases.png")
all_phrase
dev.off()
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase, ncol=2) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "best_phrases.png")
best_phrase
dev.off()
library(readxl)
library(dplyr)
library(ggplot2)
library(BiocGenerics)
# Importing data and renaming columns
# Then adding columns for subject and trial numbers
file_extension <- "/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/excel_data/"
data <- vector("list",5)
for (num in 1:5) {
data[[num]] <- as_tibble(read_excel(paste(file_extension,"Data_",num,".xlsx",sep="")))
colnames(data[[num]]) <- c("time","Ch1_mean", "Ch1_amp", "Ch1_time_max",
"Ch1_time_min", "Ch2_mean", "Ch2_amp", "Ch2_time_max",
"Ch2_time_min","Ch3_mean", "Ch3_amp", "Ch3_time_max",
"Ch3_time_min", "Ch4_mean", "Ch4_amp", "Ch4_time_max",
"Ch4_time_min")
data[[num]] <- data[[num]] %>% mutate(subject = c(num), phrase = c(NA), spoken = c("Yes"))
data[[num]] <- data[[num]][,c(1,18,19,20,2:17)]
}
# Removing header lines and non-trials
for (i in 2:5) {
data[[i]] <- data[[i]][-c(1,2),]
}
data[[1]] <- data[[1]][-c(1),]
data[[1]] <- data[[1]][-c(280:282,284:286),]
data[[3]] <- data[[3]][-c(142),]
data[[3]] <- data[[3]][-c(53:55,57:59),]
data[[4]] <- data[[4]][-c(1,2),]
data[[4]] <- data[[4]][-c(158),]
data[[5]] <- data[[5]][-c(56:58,60:62),]
# Adding numbering for phrases/whether they're spoken or silent
for (num in 1:5) {
new_set <- which(grepl(paste("^","0","$",sep=""),data[[num]]$time))
new_set <- append(new_set, length(data[[num]][[1]]))
for (i in 1:20) {
if (i > 10) {
data[[num]][new_set[[i]]:new_set[[i+1]],"phrase"] <- i-10
data[[num]][new_set[[i]]:new_set[[i+1]],"spoken"] <- "No"
} else {
data[[num]][new_set[[i]]:new_set[[i+1]],"phrase"] <- i
}
}
}
# Combining all data into one dataframe
all_data <- do.call(rbind,data)
View(all_data)
all_phrase <- normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_point(stat="identity") +
facet_wrap(~ phrase) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
all_phrase
all_phrase_together <- normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=factor(phrase), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Phrase", title="Peak heights by normalized start time", color="Vocalization")
all_phrase_together
png(filename = "all_phrases.png")
all_phrase_together
dev.off()
peak_phrase1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/reformat2_phrase1.csv", header=TRUE, sep=","))
View(peak_phrase1)
peak_phrase1$subject <- as.character(peak_phrase1$subject)
peak_phrase1$vocalization <- as.character(peak_phrase1$vocalization)
peak_phrase1$time <- as.double(as.character(peak_phrase1$time))
peak_phrase1$voltage <- as.double(as.character(peak_phrase1$voltage))
phrase_1 <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1
phrase_1 <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=time, y=voltage, color=factor(vocalization))) +
geom_point() +
facet_wrap(~ subject, ncol=2)
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1
phrase_1_line <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_line
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
normalized_p <- as_tibble(normalized_p)
just_silent_p <- peak_phrase1 %>% filter(vocalization == "silent") %>% mutate(new_time = time)
just_silent_p <- as_tibble(just_silent_p)
normalized_all_p <- as_tibble(rbind(normalized_p,just_silent_p))
View(normalized_all)
phrase_1 <- normalized_all_p %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=new_time, y=voltage, color=factor(vocalization))) +
geom_point() +
facet_wrap(~ subject, ncol=2)
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1
phrase_1_line <- normalized_all_p %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=new_time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_line
View(normalized_all)
View(normalized_all_p)
peak_phrase1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/reformat2_phrase1.csv", header=TRUE, sep=","))
View(peak_phrase1)
peak_phrase1$subject <- as.character(peak_phrase1$subject)
peak_phrase1$vocalization <- as.character(peak_phrase1$vocalization)
peak_phrase1$time <- as.double(as.character(peak_phrase1$time))
peak_phrase1$voltage <- as.double(as.character(peak_phrase1$voltage))
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor_p)
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
normalized_p <- as_tibble(normalized_p)
View(normalized_p)
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time))
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
normalized_p <- as_tibble(normalized_p)
View(normalized_p)
View(norm_factor_p)
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor_p)
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject)
View(normalized_p)
View(norm_factor_p)
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time))
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
peak_phrase1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/reformat2_phrase1.csv", header=TRUE, sep=","))
View(peak_phrase1)
peak_phrase1$subject <- as.character(peak_phrase1$subject)
peak_phrase1$vocalization <- as.character(peak_phrase1$vocalization)
peak_phrase1$time <- as.double(as.character(peak_phrase1$time))
peak_phrase1$voltage <- as.double(as.character(peak_phrase1$voltage))
peak_phrase1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/reformat2_phrase1.csv", header=TRUE, sep=","))
View(peak_phrase1)
peak_phrase1$subject <- as.character(peak_phrase1$subject)
peak_phrase1$vocalization <- as.character(peak_phrase1$vocalization)
peak_phrase1$time <- as.double(as.character(peak_phrase1$time))
peak_phrase1$voltage <- as.double(as.character(peak_phrase1$voltage))
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
normalized_p <- as_tibble(normalized_p)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
normalized <- as_tibble(normalized)
View(normalized)
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time)# - norm_factor_p$time_diff[subject])
normalized_p <- as_tibble(normalized_p)
peak_phrase1$subject <- as.numeric(as.character(peak_phrase1$subject))
norm_factor_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
normalized_p <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(new_time = time - norm_factor_p$time_diff[subject])
normalized_p <- as_tibble(normalized_p)
just_silent_p <- peak_phrase1 %>% filter(vocalization == "silent") %>% mutate(new_time = time)
just_silent_p <- as_tibble(just_silent_p)
normalized_all_p <- as_tibble(rbind(normalized_p,just_silent_p))
View(normalized_all_p)
View(normalized_all_p)
phrase_1 <- normalized_all_p %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=new_time, y=voltage, color=factor(vocalization))) +
geom_point() +
facet_wrap(~ subject, ncol=2)
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1
phrase_1_line <- normalized_all_p %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=new_time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_line
View(norm_factor_p)
alt_norm_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time))
View(alt_norm_p)
alt_norm_p <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
summarize(start_time = min(time))
alt_normalized_p <- alt_norm_p %>%
group_by(subject,vocalization) %>%
mutate(norm_time = time - start_time)
group_by(subject) %>%
mutate(norm_time = time - start_time[subject])
alt_normalized_p_spoken <- alt_norm_p %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(norm_time = time - start_time[subject])
alt_normalized_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(norm_time = time - alt_norm_p$start_time[subject])
View(alt_normalized_p_spoken)
alt_normalized_p_spoken <- peak_phrase1 %>%
group_by(subject,vocalization) %>%
mutate(norm_time = time - alt_norm_p$start_time)
alt_norm_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
summarize(start_time = min(time)) %>%
mutate(norm_time = time - start_time)
alt_norm_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
summarize(start_time = min(time))
alt_normalized_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(norm_time = time - alt_norm_p$start_time[subject])
alt_norm_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
summarize(start_time = min(time))
alt_norm_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
summarize(start_time = min(time))
alt_normalized_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(norm_time = time - alt_norm_p_spoken$start_time[subject])
alt_norm_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
summarize(start_time = min(time))
alt_normalized_p_spoken <- peak_phrase1 %>%
filter(vocalization == "spoken") %>%
group_by(subject) %>%
mutate(norm_time = time - alt_norm_p_spoken$start_time[subject])
alt_normalized_p_spoken <- as_tibble(alt_normalized_p_spoken)
alt_norm_p_silent <- peak_phrase1 %>%
filter(vocalization == "silent") %>%
group_by(subject) %>%
summarize(start_time = min(time))
alt_normalized_p_silent <- peak_phrase1 %>%
filter(vocalization == "silent") %>%
group_by(subject) %>%
mutate(norm_time = time - alt_norm_p_silent$start_time[subject])
alt_normalized_p_silent <- as_tibble(alt_normalized_p_silent)
alt_normalized_all <- as_tibble(rbind(alt_normalized_p_spoken, alt_normalized_p_silent))
View(alt_normalized_all)
phrase_1_line <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=new_time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_line
phrase_1_line <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=norm_time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_line
phrase_1_alt_line <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=norm_time, y=voltage, color=factor(vocalization))) +
geom_point() +
facet_wrap(~ subject, ncol=2) +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_alt_line
phrase_1_alt_line <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=norm_time, y=voltage, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ subject, ncol=2) +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_alt_line
phrase_1_alt
phrase_1_alt <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=norm_time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_alt
phrase_1_alt <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=norm_time, y=factor(subject), color=factor(vocalization))) +
geom_point() +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "phrase_1_allsubj.png")
phrase_1_alt
dev.off()
phrase_1_alt_line <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=norm_time, y=voltage, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ subject, ncol=2) +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
phrase_1_alt_line
phrase_1_alt_line <- alt_normalized_all %>%
group_by(subject,vocalization) %>%
ggplot(aes(x=norm_time, y=voltage, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ subject, ncol=2) +
labs(x="Time (sec)", y="Subject", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "phrase_1_lines.png")
phrase_1_alt_line
dev.off()
