geom_bar(aes(fill=variable),stat="identity",position="dodge") +
labs(x="Phrase Number",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Subject 1: Diff in Mean Amplitude Between Conditions by Phrase",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(subject), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Diff in Mean Amplitude Between Conditions by Subject",
fill="Muscle")
png(file='phrs1_diff_mean_amp.png')
ggplot(p_phrs1_m, aes(x=factor(subject), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Diff in Mean Amplitude Between Conditions by Subject",
fill="Muscle")
dev.off()
p_phrs1 <- all_data %>%
filter(phrase==1) %>%
group_by(subject,spoken) %>%
mutate(Ch1_mean = mean(as.numeric(Ch1_amp),na.rm=TRUE),
Ch2_mean = mean(as.numeric(Ch2_amp),na.rm=TRUE),
Ch3_mean = mean(as.numeric(Ch3_amp),na.rm=TRUE),
Ch4_mean = mean(as.numeric(Ch4_amp),na.rm=TRUE))
p_phrs1_m <- melt(p_phrs1[,c('subject','Ch1_mean','Ch2_mean','Ch3_mean','Ch4_mean')],id.vars=1)
ggplot(p_phrs1_m, aes(x=factor(subject), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
facet_wrap(~subject,ncols=2) +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Diff in Mean Amplitude Between Conditions by Subject",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(subject), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
facet_wrap(~subject,ncol=2) +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Diff in Mean Amplitude Between Conditions by Subject",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(spoken), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
facet_wrap(~subject,ncol=2) +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Diff in Mean Amplitude Between Conditions by Subject",
fill="Muscle")
p_phrs1 <- all_data %>%
filter(phrase==1) %>%
group_by(subject,spoken) %>%
mutate(Ch1_mean = mean(as.numeric(Ch1_amp),na.rm=TRUE),
Ch2_mean = mean(as.numeric(Ch2_amp),na.rm=TRUE),
Ch3_mean = mean(as.numeric(Ch3_amp),na.rm=TRUE),
Ch4_mean = mean(as.numeric(Ch4_amp),na.rm=TRUE))
p_phrs1_m <- melt(p_phrs1[,c('spoken','Ch1_mean','Ch2_mean','Ch3_mean','Ch4_mean')],id.vars=1)
ggplot(p_phrs1_m, aes(x=factor(spoken), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
facet_wrap(~subject,ncol=2) +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Diff in Mean Amplitude Between Conditions by Subject",
fill="Muscle")
p_phrs1 <- all_data %>%
filter(phrase==1) %>%
group_by(subject,spoken) %>%
mutate(Ch1_mean = mean(as.numeric(Ch1_amp),na.rm=TRUE),
Ch2_mean = mean(as.numeric(Ch2_amp),na.rm=TRUE),
Ch3_mean = mean(as.numeric(Ch3_amp),na.rm=TRUE),
Ch4_mean = mean(as.numeric(Ch4_amp),na.rm=TRUE))
p_phrs1_m <- melt(p_phrs1[,c('subject','spoken','Ch1_mean','Ch2_mean','Ch3_mean','Ch4_mean')],id.vars=c(1,2))
ggplot(p_phrs1_m, aes(x=factor(spoken), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
facet_wrap(~subject,ncol=2) +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Diff in Mean Amplitude Between Conditions by Subject",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(spoken), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
facet_wrap(~subject,ncol=2) +
labs(x="Subject",y="Difference in Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Mean Amplitude Between Conditions by Subject",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(spoken), y=value)) +
geom_bar(aes(fill=variable),stat="identity",position="dodge") +
facet_wrap(~subject, ncol=2, labeller = labeller(subject = subj_labels)) +
labs(x="Vocalization",y="Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Mean Amplitude Between Conditions by Subject",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(variable), y=value)) +
geom_bar(aes(fill=spoken),stat="identity",position="dodge") +
facet_wrap(~subject, ncol=2, labeller = labeller(subject = subj_labels)) +
labs(x="Vocalization",y="Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Mean Amplitude Between Conditions by Subject",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(variable), y=value)) +
geom_bar(aes(fill=spoken),stat="identity",position="dodge") +
facet_wrap(~subject, ncol=2, labeller = labeller(subject = subj_labels)) +
labs(x="Vocalization",y="Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Mean Amplitude Between Conditions by Subject",
fill="Muscle")
# Phrase 1
p_phrs1 <- all_data %>%
filter(phrase==1) %>%
group_by(subject,spoken) %>%
mutate(M1 = mean(as.numeric(Ch1_amp),na.rm=TRUE),
M2 = mean(as.numeric(Ch2_amp),na.rm=TRUE),
M3 = mean(as.numeric(Ch3_amp),na.rm=TRUE),
M4 = mean(as.numeric(Ch4_amp),na.rm=TRUE))
p_phrs1_m <- melt(p_phrs1[,c('subject','spoken','M1','M2','M3','M4')],id.vars=c(1,2))
ggplot(p_phrs1_m, aes(x=factor(variable), y=value)) +
geom_bar(aes(fill=spoken),stat="identity",position="dodge") +
facet_wrap(~subject, ncol=2, labeller = labeller(subject = subj_labels)) +
labs(x="Vocalization",y="Mean Amplitude (Spoken-Silent)",
title="Phrase 1: Mean Amplitude Between Conditions by Subject",
fill="Muscle")
ggplot(p_phrs1_m, aes(x=factor(variable), y=value)) +
geom_bar(aes(fill=spoken),stat="identity",position="dodge") +
facet_wrap(~subject, ncol=2, labeller = labeller(subject = subj_labels)) +
labs(x="Muscle",y="Mean Amplitude (mV)",
title="Phrase 1: Mean Amplitude Between Conditions by Subject",
fill="Vocalized")
png(file='phrs1_mean_amp.png')
ggplot(p_phrs1_m, aes(x=factor(variable), y=value)) +
geom_bar(aes(fill=spoken),stat="identity",position="dodge") +
facet_wrap(~subject, ncol=2, labeller = labeller(subject = subj_labels)) +
labs(x="Muscle",y="Mean Amplitude (mV)",
title="Phrase 1: Mean Amplitude Between Conditions by Subject",
fill="Vocalized")
dev.off()
library(readxl)
library(dplyr)
library(ggplot2)
library(BiocGenerics)
# Importing data and renaming columns
# Then adding columns for subject and trial numbers
file_extension <- "/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/excel_data/"
data <- vector("list",5)
for (num in 1:5) {
data[[num]] <- as_tibble(read_excel(paste(file_extension,"Data_",num,".xlsx",sep="")))
colnames(data[[num]]) <- c("time","Ch1_mean", "Ch1_amp", "Ch1_time_max",
"Ch1_time_min", "Ch2_mean", "Ch2_amp", "Ch2_time_max",
"Ch2_time_min","Ch3_mean", "Ch3_amp", "Ch3_time_max",
"Ch3_time_min", "Ch4_mean", "Ch4_amp", "Ch4_time_max",
"Ch4_time_min")
data[[num]] <- data[[num]] %>% mutate(subject = c(num), phrase = c(NA), spoken = c("Yes"))
data[[num]] <- data[[num]][,c(1,18,19,20,2:17)]
}
# Removing header lines and non-trials
for (i in 2:5) {
data[[i]] <- data[[i]][-c(1,2),]
}
data[[1]] <- data[[1]][-c(1),]
data[[1]] <- data[[1]][-c(280:282,284:286),]
data[[3]] <- data[[3]][-c(142),]
data[[3]] <- data[[3]][-c(53:55,57:59),]
data[[4]] <- data[[4]][-c(1,2),]
data[[4]] <- data[[4]][-c(158),]
data[[5]] <- data[[5]][-c(56:58,60:62),]
# Adding numbering for phrases/whether they're spoken or silent
for (num in 1:5) {
new_set <- which(grepl(paste("^","0","$",sep=""),data[[num]]$time))
new_set <- append(new_set, length(data[[num]][[1]]))
for (i in 1:20) {
if (i > 10) {
data[[num]][new_set[[i]]:new_set[[i+1]],"phrase"] <- i-10
data[[num]][new_set[[i]]:new_set[[i+1]],"spoken"] <- "No"
} else {
data[[num]][new_set[[i]]:new_set[[i+1]],"phrase"] <- i
}
}
}
# Combining all data into one dataframe
all_data <- do.call(rbind,data)
View(all_data)
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv",header=TRUE))
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv",header=TRUE))
View(peak_ch1)
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1 %>% group_by(phrase,vocalization) %>% mutate(num_peaks = n())
peak_ch1 %>% group_by(phrase,vocalization) %>% summarise(num_peaks = n())
peak_ch1 %>%
filter(phrase == 1) %>%
group_by(vocalization) %>%
ggplot2(aes(x=Time_sec, y=voltage_microv, color=vocalization)) +
geom_line(stat="identity")
peak_ch1 %>%
filter(phrase == 1) %>%
group_by(vocalization) %>%
ggplot(aes(x=Time_sec, y=voltage_microv, color=vocalization)) +
geom_line(stat="identity")
peak_ch1 %>%
filter(phrase == 1) %>%
group_by(vocalization) %>%
ggplot(aes(x=Time_sec, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity")
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.numeric(peak_ch1$Time_sec)
peak_ch1$voltage_microv <- as.numeric(peak_ch1$voltage_microv)
peak_ch1 %>%
filter(phrase == 1) %>%
group_by(vocalization) %>%
ggplot(aes(x=Time_sec, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity")
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(peak_ch1$Time_sec)
peak_ch1$voltage_microv <- as.double(peak_ch1$voltage_microv)
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
head(peak_ch1)
peak_ch1$Time_sec <- as.double(peak_ch1$Time_sec)
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
peak_ch1 %>%
filter(phrase == 1) %>%
group_by(vocalization) %>%
ggplot(aes(x=Time_sec, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity")
peak_ch1 %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=Time_sec, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
View(noramlized)
View(normalized)
normalized <- peak_ch1 %>% group_by(phrase,vocalization)
View(normalized)
mutate(time_diff = start_time - lag(start_time))
normalized <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec))
normalized <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %%
mutate(time_diff = start_time - lag(start_time))
normalized <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time))
View(normalized)
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time))
View(norm_factor)
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
View(normalized)
normalized <- peak_ch1 %>%
#filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec[vocalization=="spoken"] - norm_factor$time_diff[phrase])
View(normalized)
normalized <- peak_ch1
normalized <- peak_ch1 %>%
#filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec[vocalization=="spoken"] - norm_factor$time_diff[phrase])
View(normalized)
1.641 - 0.972
3.517 - 0.972
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
View(normalized)
combined <- cbind(peak_ch1,normalized)
View(combined)
normalized_all <- rbind(normalized,just_silent)
just_silent <- peak_ch1 %>% filter(vocalization == "silent")
normalized_all <- rbind(normalized,just_silent)
View(normalized_all)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
View(normalized)
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
View(normalized)
just_silent <- peak_ch1 %>% filter(vocalization == "silent")
View(just_silent)
just_silent <- peak_ch1 %>% filter(vocalization == "silent")
just_silent$new_time <- c(NA)
View(just_silent)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
normalized_all <- rbind(normalized,just_silent)
View(normalized_all)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
just_silent <- peak_ch1 %>% filter(vocalization == "silent")
just_silent$new_time <- c(NA)
normalized_all <- rbind(normalized,just_silent)
View(normalized_all)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
View(normalized)
just_silent <- peak_ch1 %>% filter(vocalization == "silent")
just_silent$new_time <- c(NA)
View(just_silent)
normalized <- as_tibble(normalized)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
just_silent <- peak_ch1 %>% filter(vocalization == "silent") %>% mutate(new_time = Time_sec)
just_silent <- as_tibble(just_silent)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
peak_ch1 %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
all_phrase <- normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
all_phrase
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5)
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5)
best_phrase
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase)
best_phrase
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase, ncol=2)
best_phrase
best_phrase
png(filename = "all_phrases.png")
all_phrase
dev.off()
png(filename = "best_phrases.png")
best_phrase
dev.off()
(filename = "all_phrases.png")
all_phrase
dev.off()
png(filename = "best_phrases.png")
best_phrase
dev.off()
png(filename = "all_phrases.png")
all_phrase
dev.off()
all_phrase <- normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "all_phrases.png")
all_phrase
dev.off()
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase, ncol=2) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "best_phrases.png")
best_phrase
dev.off()
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec))
View(norm_factor)
normalized <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
mutate(new_time = Time_sec - norm_factor$start_time[phrase,vocalization])
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec))
normalized <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
mutate(new_time = Time_sec - norm_factor$start_time[phrase,vocalization])
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
normalized <- as_tibble(normalized)
View(normalized)
just_silent <- peak_ch1 %>% filter(vocalization == "silent") %>% mutate(new_time = Time_sec)
just_silent <- as_tibble(just_silent)
View(just_silent)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
summarize(phrase_mean = mean(as.numeric(Ch1_amp),na.rm=TRUE)) %>%
mutate(phrase_diff = phrase_mean - lag(phrase_mean)) %>%
peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarise(num_peaks = n())
# Peak data
# Channel 1, peaks above 10uV
peak_ch1 <- as_tibble(read.csv2("/media/maddy/Seagate Portable Drive/git/Bio_381/group_IP/peaks_reformat.csv", header=TRUE, sep=","))
peak_ch1$Time_sec <- as.double(as.character(peak_ch1$Time_sec))
peak_ch1$voltage_microv <- as.double(as.character(peak_ch1$voltage_microv))
norm_factor <- peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarize(start_time = min(Time_sec)) %>%
mutate(time_diff = start_time - lag(start_time)) %>%
filter(vocalization == "spoken")
View(norm_factor)
normalized <- peak_ch1 %>%
filter(vocalization == "spoken") %>%
group_by(phrase) %>%
mutate(new_time = Time_sec - norm_factor$time_diff[phrase])
normalized <- as_tibble(normalized)
View(normalized)
just_silent <- peak_ch1 %>% filter(vocalization == "silent") %>% mutate(new_time = Time_sec)
just_silent <- as_tibble(just_silent)
View(just_silent)
normalized_all <- as_tibble(rbind(normalized,just_silent))
View(normalized_all)
peak_ch1 %>%
group_by(phrase,vocalization) %>%
summarise(num_peaks = n())
all_phrase <- normalized_all %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "all_phrases.png")
all_phrase
dev.off()
best_phrase <- normalized_all %>%
filter(phrase==2 | phrase==4 | phrase==5) %>%
group_by(phrase,vocalization) %>%
ggplot(aes(x=new_time, y=voltage_microv, color=factor(vocalization))) +
geom_line(stat="identity") +
facet_wrap(~ phrase, ncol=2) +
labs(x="Time (sec)", y="Voltage (uV)", title="Peak heights by normalized start time", color="Vocalization")
png(filename = "best_phrases.png")
best_phrase
dev.off()
