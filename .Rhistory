data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
family=element_text(family='TT Times New Roman'))
data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_scatter.png',device='png')
mod_data %>%
ggplot(aes(x = strtoi(R_elec_MOhm), y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Resistance (MO)',y='Vm (mV)') +
ggtitle('Resting membrane potential versus resistance by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_scatter-2.png',device='png')
data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)',fill='Condition') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_scatter.png',device='png')
mod_data %>%
ggplot(aes(x = strtoi(R_elec_MOhm), y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Resistance (MO)',y='Vm (mV)',fill='Condition') +
ggtitle('Resting membrane potential versus resistance by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_scatter-2.png',device='png')
data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)',color='Condition') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'),
legend.title = element_text(color))
data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif')) +
guides(fill=guide_legend(title="Condition"))
ggsave('10-1_scatter.png',device='png')
mod_data %>%
ggplot(aes(x = strtoi(R_elec_MOhm), y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Resistance (MO)',y='Vm (mV)') +
ggtitle('Resting membrane potential versus resistance by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'),
legend.title = element_text(color)) +
guides(fill=guide_legend(title="Condition"))
data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif')) +
guides(fill=guide_legend(title="Condition"))
ggsave('10-1_scatter.png',device='png')
mod_data %>%
ggplot(aes(x = strtoi(R_elec_MOhm), y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Resistance (MO)',y='Vm (mV)') +
ggtitle('Resting membrane potential versus resistance by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif')) +
guides(fill=guide_legend(title="Condition"))
ggsave('10-1_scatter-2.png',device='png')
data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)',color='Condition') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif')) +
guides(fill=guide_legend(title="Condition"))
ggsave('10-1_scatter.png',device='png')
mod_data %>%
ggplot(aes(x = strtoi(R_elec_MOhm), y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Resistance (MO)',y='Vm (mV)',color='Condition') +
ggtitle('Resting membrane potential versus resistance by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_scatter-2.png',device='png')
mod_data %>% group_by(condition) %>% summarize(mean_vm = mean(Vm, na.rm=TRUE))
mod_data %>% group_by(condition) %>% summarize(mean_vm = mean(Vm, na.rm=TRUE))
data <- read_excel('10-1_indep_project.xlsx')
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
mod_data %>% group_by(condition) %>% summarize(mean_vm = mean(Vm, na.rm=TRUE))
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)',color='Condition') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif')) +
guides(fill=guide_legend(title="Condition"))
ggsave('10-1_scatter.png',device='png')
mod_data %>%
ggplot(aes(x = strtoi(R_elec_MOhm), y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Resistance (MO)',y='Vm (mV)',color='Condition') +
ggtitle('Resting membrane potential versus resistance by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_scatter-2.png',device='png')
mod_data %>% group_by(condition) %>% summarize(mean_vm = mean(Vm))
mod_data %>% group_by(condition) %>% summarize(med_vm = median(Vm))
mod_data %>% group_by(condition) %>% summarize(time_spread = max(Time)-min(Time))
mod_data %>% summarize(time_spread = max(Time)-min(Time))
mod_data %>% filter(condition=='Standard',Time < '03:00') %>% summarize(mean_Vm = mean(Vm))
mod_data %>% filter(condition=='Standard',Time < 03:00) %>% summarize(mean_Vm = mean(Vm))
mod_data %>% filter(condition=='Standard',Time > 03:00) %>% summarize(mean_Vm = mean(Vm))
mod_data %>% filter(condition=='Standard',Time == 04:52:00 | TIme == 04:55:00) %>% summarize(mean_Vm = mean(Vm))
mod_data %>% filter(condition=='Standard',Time == 04:52:00 | Time == 04:55:00) %>% summarize(mean_Vm = mean(Vm))
mean(c(-59.8,-50.2))
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
mod_data$Ca_conc_mM[i] = strsplit(mod_data$Ca_conc[i], " ")[[1]]
mod_data$Mg_conc_mM[i] = strsplit(mod_data$Mg_conc[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
res.aov2 <- aov(Vm ~ Ca_conc_mM + Mg_conc_mM, data = mod_data)
summary(res.aov2)
res.aov2 <- aov(Vm ~ Ca_conc_mM * Mg_conc_mM, data = mod_data)
summary(res.aov2)
res.aov2 <- aov(Vm ~ Ca_conc_mM + Mg_conc_mM + Ca_conc_mM:Mg_conc_mM, data = mod_data)
summary(res.aov2)
res.aov3 <- aov(Vm ~ Ca_conc_mM + Mg_conc_mM + Ca_conc_mM:Mg_conc_mM, data = mod_data)
summary(res.aov3)
res.aov3 <- aov(Vm ~ Ca_conc_mM * Mg_conc_mM, data = mod_data)
summary(res.aov3)
aov <- aov(Vm ~ Ca_conc_mM * Mg_conc_mM, data = mod_data)
summary(aov)
TukeyHSD(aov)
mod_data %>% group_by(condition) %>% do(tidy(t.test(Vm ~ condition, data = .)))
mod_data %>% group_by(condition) %>% do(t.test(Vm ~ condition, data = .))
mod_data %>% filter(condition != 'Standard/High Mg') %>% group_by(condition) %>% do(t.test(Vm ~ condition, data = .))
mod_data %>% kruskal.test(Vm ~ condition)
vec <- c(mod_data$Vm, mod_data$condition)
groups <- rep(c(1,2),times = c(length(mod_data$Vm),length(mod_data$condition)))
kruskal.test(vec ~ groups)
vec <- c(mod_data$Vm, mod_data$condition)
groups <- rep(c(1,2),times = c(length(mod_data$Vm),length(mod_data$condition)))
kruskal.test(vec ~ groups)
pairwise.wilcox.test(mod_data$Vm, mod_data$condition, p.adjust.method = "BH")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)       # To import excel sheet of data
library(tidyverse)    # For data analysis and graphing
time <- mod_data %>% lm(Vm ~ Time)
time <- lm(Vm ~ Time,data=mod_data)
summary(time)
time <- mod_data %>% filter(condition='Standard') %>% lm(Vm ~ Time,data=mod_data)
time <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ Time,data=mod_data)
time <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ Time)
time <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ Time,.)
summary(time)
data <- read_excel('10-1_indep_project.xlsx')
# Creating a new column with condition as a label
new_vals <- character(nrow(data))
for (i in 1:nrow(data)) {
if (data$Ca_conc[i] == '2 mM') {
if (data$Mg_conc[i] == '0.5 mM') {
new_vals[i] <- 'Standard'
} else if (data$Mg_conc[i] == '5 mM') {
new_vals[i] <- 'Standard/High Mg'
}
} else if (data$Ca_conc[i] == '0.5 mM') {
new_vals[i] <- 'Low Ca/High Mg'
}
}
# Creating a copy of the data with the new condition column
mod_data <- data
mod_data$condition <- factor(new_vals, levels=c('Standard', 'Standard/High Mg', 'Low Ca/High Mg'))
# Fixing the variables by removing units
for (i in 1:nrow(mod_data)) {
mod_data$R_elec_MOhm[i] = strsplit(mod_data$R_elec[i], " ")[[1]]
mod_data$Ca_conc_mM[i] = strsplit(mod_data$Ca_conc[i], " ")[[1]]
mod_data$Mg_conc_mM[i] = strsplit(mod_data$Mg_conc[i], " ")[[1]]
if (mod_data$R_elec[i] == '9') {
mod_data$R_elec[i] <- '09'
}
}
# Getting median resting membrane potential by group
mod_data %>% group_by(condition) %>% summarize(med_vm = median(Vm))
# Getting range of time for data collection
mod_data %>% summarize(time_spread = max(Time)-min(Time))
# Doing significance tests to compare groups
# Used http://www.sthda.com/english/wiki/kruskal-wallis-test-in-r
vec <- c(mod_data$Vm, mod_data$condition)
groups <- rep(c(1,2),times = c(length(mod_data$Vm),length(mod_data$condition)))
kruskal.test(vec ~ groups)
pairwise.wilcox.test(mod_data$Vm, mod_data$condition, p.adjust.method = "BH")
# Stats from linear regresion model for Vm versus time
time <- mod_data %>% filter(condition=='Low Ca/High Mg') %>% lm(Vm ~ Time,.)
summary(time)
# Boxplot of Vm by condition
mod_data %>%
ggplot(aes(x = factor(condition), y = Vm)) +
geom_boxplot() +
labs(x='Condition',y='Vm (mV)') +
ggtitle('Resting membrane potential by saline condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_boxplot.png',device='png')
# Scatterplot of Vm by time and group
mod_data %>%
ggplot(aes(x = Time, y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Time of Day',y='Vm (mV)',color='Condition') +
ggtitle('Resting membrane potential over time by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif')) +
guides(fill=guide_legend(title="Condition"))
ggsave('10-1_scatter.png',device='png')
# Scatterplot of Vm by resistance and group
mod_data %>%
ggplot(aes(x = strtoi(R_elec_MOhm), y = Vm, color = factor(condition))) +
geom_point() +
labs(x='Resistance (MO)',y='Vm (mV)',color='Condition') +
ggtitle('Resting membrane potential versus resistance by condition') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_scatter-2.png',device='png')
time <- mod_data %>% filter(condition=='Low Ca/High Mg') %>% lm(Vm ~ Time,.)
summary(time)
time <- mod_data %>% filter(condition=='Low Ca/High Mg') %>% lm(Vm ~ Time,.)
summary(time)
time <- mod_data %>% filter(condition=='Low Ca/High Mg') %>% lm(Vm ~ Time,.)
summary(time)
time <- mod_data %>% filter(condition=='Standard/High Mg') %>% lm(Vm ~ Time,.)
summary(time)
resist <- mod_data %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
resist <- mod_data %>% filter(condition=='Standard/High Mg') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
resist <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
time <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ Time,.)
summary(time)
resist <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
resist <- mod_data %>% filter(condition=='Low Ca/High Mg') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
resist <- mod_data %>% filter(condition=='Standard/High Mg') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
resist <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
is.factor(R_elec_MOhm)
is.factor(mod_data$R_elec_MOhm)
mod_data$R_elec_MOhm <- as.numeric(as.character(mod_data$R_elec_MOhm))
resist <- mod_data %>% filter(condition=='Standard') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
# Stats from linear regresion model for Vm versus time
mod_data$R_elec_MOhm <- as.numeric(as.character(mod_data$R_elec_MOhm))
resist <- mod_data %>% filter(condition=='Low Ca/High Mg') %>% lm(Vm ~ R_elec_MOhm,.)
summary(resist)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)       # To import excel sheet of data
library(tidyverse)    # For data analysis and graphing
mod_data_k <- mod_data %>% group_by(condition) %>% mutate(K_conc_mM = if_else(condition == 'Standard' | condition == 'Standard/High Mg',2,22))
View(mod_data_k)
mod_data_k <- mod_data %>% group_by(condition) %>% mutate(K_conc_mM = if_else(condition == 'Standard' | condition == 'Standard/High Mg',2,22))
mod_data_k %>% ggplot(aes(x = factor(K_conc_mM), y = Vm)) +
geom_boxplot() +
labs(x='Concentration K+ (mM)',y='Vm (mV)') +
ggtitle('Resting membrane potential by K+ concentration') +
theme(plot.title = element_text(size=10),
text=element_text(family='serif'))
ggsave('10-1_box_2.png',device='png')
pairwise.wilcox.test(mod_data_k$Vm, mod_data_k$K_conc_mM, p.adjust.method = "BH")
mod_data_k %>% group_by(K_conc_mM) %>% summarize(med_vm = median(Vm))
